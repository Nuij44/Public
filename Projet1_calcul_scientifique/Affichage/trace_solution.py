import numpy as np
import matplotlib.pyplot as plt
from matplotlib import cm

solex = 0   #mettre 1 pour afficher la solution exacte
solapp = 0  #mettre 1 pour afficher la solution approchée
diffsol = 1 ##mettre 1 pour afficher la différence entre la solution approchée et la solution exacte

# On produit une surface en 3D grâce à l'outil np.mesgrid.
x = np.linspace(0, 1,10)
y = np.linspace(0, 1, 10)
x, y = np.meshgrid(x, y)

exacte = [0.998377, 0.849270, 0.617031, 0.324392, 0.000000, -0.324392, -0.617031, -0.849270, -0.998377, -1.049755, 1.145046, 0.974034, 0.707677, 0.372048, 0.000000, -0.372048, -0.707677, -0.974034, -1.145046, -1.203972, 1.405658, 1.195725, 0.868745, 0.456726, 0.000000, -0.456726, -0.868745, -1.195725, -1.405658, -1.477997, 1.806149, 1.536402, 1.116262, 0.586853, 0.000000, -0.586853, -1.116262, -1.536402, -1.806149, -1.899098, 2.386371, 2.029968, 1.474858, 0.775379, 0.000000, -0.775379, -1.474858, -2.029968, -2.386371, -2.509178, 3.204061, 2.725537, 1.980218, 1.041062, 0.000000, -1.041062, -1.980218, -2.725537, -3.204061, -3.368949, 4.340589, 3.692325, 2.682631, 1.410343, 0.000000, -1.410343, -2.682631, -3.692325, -4.340589, -4.563965, 5.909050, 5.026538, 3.651994, 1.919967, 0.000000, -1.919967, -3.651994, -5.026538, -5.909050, -6.213143, 8.065525, 6.860945, 4.984768, 2.620648, 0.000000, -2.620648, -4.984768, -6.860945, -8.065525, -8.480594, 11.024603, 9.378087, 6.813579, 3.582111, 0.000000, -3.582111, -6.813579, -9.378087, -11.024603, -11.591953]
calc = [0.728676, 0.756103, 0.492838, 0.168491, -0.000238, -0.168967, -0.493314, -0.756580, -0.729152, -0.860328, 0.703444, 0.614918, 0.440009, 0.212162, -0.000476, -0.213114, -0.440961, -0.615871, -0.704397, -0.743702, 0.695816, 0.595788, 0.432227, 0.223859, -0.000714, -0.225288, -0.433656, -0.597217, -0.697245, -0.731413, 0.751979, 0.644581, 0.471380, 0.248114, -0.000952, -0.250019, -0.473285, -0.646486, -0.753884, -0.789996, 0.879966, 0.761220, 0.562239, 0.298121, -0.001191, -0.300502, -0.564620, -0.763601, -0.882347, -0.921027, 1.088231, 0.961184, 0.721039, 0.383906, -0.001430, -0.386763, -0.723894, -0.964042, -1.091088, -1.127949, 1.384497, 1.283105, 0.983261, 0.516027, -0.001676, -0.519355, -0.986585, -1.286445, -1.387831, -1.401494, 1.750123, 1.841257, 1.429070, 0.677874, -0.001970, -0.681626, -1.432829, -1.845126, -1.753918, -1.682312, 1.942586, 3.160488, 2.169224, 0.670764, -0.002736, -0.674437, -2.173205, -3.165330, -1.946573, -1.833823, 3.276840, 10.565410, -3.384858, -0.823289, -0.012865, 0.825041, 3.389273, -10.577099, -3.280046, -3.283451]
diff = [0.269700, 0.093166, 0.124193, 0.155901, 0.000238, 0.155425, 0.123717, 0.092690, 0.269224, 0.189427, 0.441601, 0.359116, 0.267668, 0.159886, 0.000476, 0.158934, 0.266716, 0.358163, 0.440649, 0.460270, 0.709842, 0.599936, 0.436518, 0.232867, 0.000714, 0.231438, 0.435089, 0.598508, 0.708413, 0.746584, 1.054170, 0.891821, 0.644881, 0.338739, 0.000952, 0.336835, 0.642977, 0.889917, 1.052266, 1.109101, 1.506405, 1.268748, 0.912619, 0.477258, 0.001191, 0.474877, 0.910238, 1.266367, 1.504024, 1.588151, 2.115830, 1.764353, 1.259179, 0.657156, 0.001430, 0.654300, 1.256324, 1.761495, 2.112972, 2.241000, 2.956092, 2.409220, 1.699370, 0.894315, 0.001676, 0.890987, 1.696047, 2.405880, 2.952758, 3.162471, 4.158927, 3.185282, 2.222924, 1.242093, 0.001970, 1.238340, 2.219165, 3.181412, 4.155133, 4.530832, 6.122938, 3.700457, 2.815544, 1.949884, 0.002736, 1.946211, 2.811563, 3.695615, 6.118951, 6.646771, 7.747763, 1.187323, 10.198437, 4.405400, 0.012865, 4.407152, 10.202852, 1.199012, 7.744557, 8.308502]
# Tracé de la surface.
fig = plt.figure(figsize=(7, 7))
axes = plt.axes(projection="3d")
if (solex == 1) :
    axes.scatter(x, y, exacte, label='Solution exacte')
    plt.title('Solution exacte sur Omega')
elif (solapp == 1) :
    axes.scatter(x, y, calc)
    plt.title('Solution approchée sur Omega')
elif (diffsol == 1):
    axes.scatter(x, y, diff)
    plt.title('Différence entre la solution exacte et la solution approchée')

plt.show()